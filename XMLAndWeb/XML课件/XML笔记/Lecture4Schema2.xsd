<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" elementFormDefault="qualified" attributeFormDefault="unqualified" vc:minVersion="1.1">
	<!--3.1复杂类型实例简介-->
	<xs:complexType name="ProductType">
		<xs:sequence>
			<xs:element name="number" type="xs:integer"/>
			<xs:element name="name" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ShirtType">
		<xs:complexContent>
			<xs:extension base="ProductType">
				<!--choice 表示下面两个元素只能选择一个-->
				<xs:choice maxOccurs="8">
					<xs:element name="size" type="SizeType"/>
					<xs:element name="color" type="xs:integer"/>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="SizeType">
		<xs:simpleContent>
			<xs:extension base="xs:integer">
				<xs:attribute name="system" type="xs:token"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<!--3.2all关键字 每个元素可以按任意顺序必须出现一次，且只有一次-->
	<xs:element name="person1">
		<xs:complexType>
			<xs:all minOccurs="1" maxOccurs="1">
				<xs:element name="firstname" type="xs:string"/>
				<xs:element name="lastname" type="xs:string"/>
			</xs:all>
		</xs:complexType>
	</xs:element>
	<!--3.3choice关键字 选择出现元素-->
	<xs:element name="person2">
		<xs:complexType>
			<xs:choice>
				<xs:element name="employee" type="xs:string"/>
				<xs:element name="member" type="xs:string"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<!--3.4所有元素按顺序出现1~5次-->
	<xs:element name="person3">
		<xs:complexType>
			<xs:sequence maxOccurs="5">
				<xs:element name="firstname" type="xs:string"/>
				<xs:element name="lastname" type="xs:string"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--3.5child——name可以出现0到10次，默认为出现一次-->
	<xs:element name="person4">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="firstname" type="xs:string"/>
				<!--可以出现无限次-->
				<xs:element name="full_name" type="xs:string" maxOccurs="unbounded"/>
				<xs:element name="child_name" type="xs:string" minOccurs="0" maxOccurs="10"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--组的创建-->
	<xs:group name="persongroup">
		<xs:sequence>
			<xs:element name="firstname" type="xs:string"/>
			<xs:element name="lastname" type="xs:string"/>
			<xs:element name="birthday" type="xs:date"/>
		</xs:sequence>
	</xs:group>
	
	<!-- 可以在另一个组中引用它或复杂的类型定义 -->
	<xs:element name="person" type="personinfo"/>
	<xs:complexType name="personinfo">
		<xs:sequence>
			<xs:group ref="persongroup"/>
			<xs:element name="country" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!-- 属性组 -->
	<xs:attributeGroup name="personattrgroup">
		<xs:attribute name="firstname" type="xs:string"/>
		<xs:attribute name="lastname" type="xs:string"/>
		<xs:attribute name="birthday" type="xs:date"/>
	</xs:attributeGroup>
	<!--属性组在复杂元素中应用 -->
	<xs:element name="person36">
		<xs:complexType>
			<xs:attributeGroup ref="personattrgroup"/>
		</xs:complexType>
	</xs:element>
	
	<!-- any关键字，可以用任何元素扩展 用于占位 -->
	<xs:element name="person99">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="firstname" type="xs:string"/>
				<xs:element name="lastname" type="xs:string"/>
				<xs:any minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<!-- 可以使用person99中的any调用children -->
	<xs:element name="children">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="childname" type="xs:string" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attributeGroup ref="personattrgroup"/> <!--元素和属性组合-->
		</xs:complexType>
	</xs:element>
	<!-- <anyAttribute>我们可以向“ person66”元素添加任意数量的属性： -->
	<xs:element name="person66">
		<xs:complexType>
			<xs:sequence> 
				<xs:element name="firstname" type="xs:string"/>
				<xs:element name="lastname" type="xs:string"/>
			</xs:sequence>
			<xs:anyAttribute/>
		</xs:complexType>
	</xs:element>
	
	<!-- 元素代替 可以连续替换 -->
	<xs:element name="name" type="xs:string"/>
	<!-- navn 可以替代name -->
	<xs:element name="navn" substitutionGroup="name"/>
	<xs:complexType name="custinfo">
		<xs:sequence>
			<xs:element ref="name"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="customer" type="custinfo"/>
	
	<!-- kunde 可以替代customer -->
	<xs:element name="kunde" substitutionGroup="customer"/>
	<!-- 全局元素声明它们是<schema>的直接子元素 -->
	<!-- 局部元素声明这些是嵌套在其他元素/类型内的元素声明/类型定义。 -->
</xs:schema>
