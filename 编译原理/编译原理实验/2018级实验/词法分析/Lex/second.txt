%{
	#include<stdio.h>
	#include<ctype.h>
	#define YYSTYPE double 
%}

% token NUM
% left '+' '-'
% left '*' '/'

%%


line : expr'\n'       {printf("%d\n", $1);}
	;

expr : expr'+'term    {$$=$1+$3; printf("%d + %d = %d\n", $1, $2, $$);}
	| expr'-'term     {$$=$1-$3; printf("%d - %d = %d\n", $1, $2, $$);}
	| term            {$$=$1;}
	;

term : term'*'factor   {$$=$1*$3; printf("%d * %d = %d\n", $1, $2, $$);}
	| term'/'factor    {$$=$1/$3; printf("%d / %d = %d\n", $1, $2, $$);}
	| factor           {$$=$1; }
	;
	
factor : '('expr')'   {$$=$1+$3; }
	| NUM           {$$=$1; }
	;	

%%

int main(){
	return yyparse();
}


intyylex(){
	int num = 0;
	while((c = getchar()) == ");
	if((c == '.') || (isdigit(c))){
		ungetc(c, stdin);
		scanf("%f", &yylval);
		return NUM;
	]
}

yyerror(char msg)
{
    printf(error %s encounteredn, msg);
}